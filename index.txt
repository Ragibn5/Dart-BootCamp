1 Data Types in Dart
----------------------
    1.1 Introduction
    1.2 Primitive Data Types
        1.2.1 Numbers (integers, doubles)
        1.2.2 Strings
        1.2.3 Booleans
    1.3 Derived types (Classes)
    1.4 Lists and Collections
        1.4.1 Lists (&arrays)
        1.4.2 Sets
        1.4.3 Maps

2 Generics in Dart
----------------------
    2.1 Introduction
        2.1.1 What are generics?
        2.1.2 Why generics are important
        2.1.3 Benefits of using generics
    2.2 Generic Functions and Methods
        2.2.1 Creating functions with generic parameters
        2.2.2 Creating functions with generic return types
        2.2.3 Combination of generic parameters & return types
    2.3 Generic Classes
        2.3.1 Building classes with generic types
        2.3.2 Constraints on generic types
    2.4 Advanced Usage of Generics
        2.4.1 Bounded Generics
        2.4.2 Applying constraints to generic types
        2.4.3 Using bounds for specific scenarios
    2.5 Generic Interfaces and Implementations
        2.5.1 Implementing interfaces with generics
        2.5.2 Utilizing generics in interface design

3 Integration of Data Types and Generics
-----------------------------------------
    3.1 Generic Data Structures
    3.2 Creating generic containers (e.g., Stack, Queue)
    3.3 Building reusable data structures
    3.4 Improving code quality through type awareness